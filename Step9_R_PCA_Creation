# Here we are setting the working directory.
setwd("C:/set/working/directory")

# Here we are loading the libraries we will need for this script. If they are not installed in your R environment you will have to do that first.
library(tidyverse)
library(stringr)

# Here we are reading the .eigenvec file and turning into a table called "pca". Then reading the .eigenval file and assigning the values to the name "eigenval". We are then viewing these to make sure they loaded correctly.
pca <- read_table("nameoffile.eigenvec", col_names = FALSE)
eigenval <- scan("nameoffile.eigenval")
print(eigenval)
View(pca)

# Here we are sorting out the pca data. We are deleting an extra column, naming the columns, and then viewing to make sure its edited correctly.
pca <- pca[,-1]
names(pca)[1] <- "ind"
names(pca)[2:ncol(pca)] <- paste0("PC", 1:(ncol(pca)-1))
View(pca)

# Here we are setting another variable called year, with the count of data within each year.
Year <- c(rep("2018", 18), rep("2022", 20))

# Here we are creatinga new dataframe with year and grpation.
pca <- as_tibble(data.frame(pca, Year))

# Here we are converting to percentage variance explained.
pve <- data.frame(PC = 1:10, pve = eigenval/sum(eigenval)*100)
cumsum(pve$pve)

# Here we are plotting the PCA, including the title, then saving the plot as a png.
b <- ggplot(pca, aes(PC1, PC2, col = Year)) + geom_point(size = 3) + scale_colour_manual(values = c("cyan", "red", "orange")) + xlab(paste0("PC1 (", signif(pve$pve[1], 3), "%)")) + 
  ylab(paste0("PC2 (", signif(pve$pve[2], 3), "%)")) + theme(text = element_text(size=22))  + ggtitle("PCA Title") + theme(plot.title = element_text(hjust = 0.5))
b
png("nameoffile.png", width = 10, height = 10, units = "in", res = 300)
b
dev.off()


